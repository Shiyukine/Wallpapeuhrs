<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net8.0-windows10.0.26100.0</TargetFramework>
    <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
    <RootNamespace>Wallpapeuhrs</RootNamespace>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Platforms>x86;x64;ARM64</Platforms>
    <RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
    <PublishProfile>win-$(Platform).pubxml</PublishProfile>
    <UseWinUI>true</UseWinUI>
    <EnableMsixTooling>false</EnableMsixTooling>
    <Nullable>enable</Nullable>
	  <WindowsPackageType>None</WindowsPackageType>
	  <StartupObject>Wallpapeuhrs.Program</StartupObject>
  <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
	<SelfContained>true</SelfContained>
	  <IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
  </PropertyGroup>
  <ItemGroup>
    <None Remove="app.manifest" />
  </ItemGroup>
  <ItemGroup>
    <AdditionalFiles Include="app.manifest" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="Assets\SplashScreen.scale-200.png" />
    <Content Include="Assets\LockScreenLogo.scale-200.png" />
    <Content Include="Assets\Square150x150Logo.scale-200.png" />
    <Content Include="Assets\Square44x44Logo.scale-200.png" />
    <Content Include="Assets\Square44x44Logo.targetsize-24_altform-unplated.png" />
    <Content Include="Assets\StoreLogo.png" />
    <Content Include="Assets\Wide310x150Logo.scale-200.png" />
    <Content Include="icon.ico" />
    <Content Include="Assets\IconWPBG.ico" />
  </ItemGroup>

  <ItemGroup>
    <Manifest Include="$(ApplicationManifest)" />
  </ItemGroup>

	<PropertyGroup>
		<WindowsKitsRoot>$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Kits\Installed Roots', 'KitsRoot10', null, RegistryView.Registry32, RegistryView.Default))</WindowsKitsRoot>
		<WindowsKitsRoot Condition="'$(WindowsKitsRoot)' == ''">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Kits\Installed Roots', 'KitsRoot81', null, RegistryView.Registry32, RegistryView.Default))</WindowsKitsRoot>
		<WindowsKitsRoot Condition="'$(WindowsKitsRoot)' == ''">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Kits\Installed Roots', 'KitsRoot', null, RegistryView.Registry32, RegistryView.Default))</WindowsKitsRoot>
		<WindowsKitsRootVersion>$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Microsoft SDKs\Windows\v10.0', 'ProductVersion', null, RegistryView.Registry32, RegistryView.Default))</WindowsKitsRootVersion>
		<SignToolPath Condition=" '$(SignToolPath)' == '' And '$(Platform)' == 'AnyCPU' ">$(WindowsKitsRoot)bin\$(WindowsKitsRootVersion).0\x64\</SignToolPath>
		<SignToolPath Condition="'$(SignToolPath)' == ''">$(WindowsKitsRoot)bin\$(WindowsKitsRootVersion).0\$(Platform)\</SignToolPath>
	</PropertyGroup>

	<Target Name="PostBuild" AfterTargets="PostBuildEvent">
		<Exec Command="mkdir &quot;$(TargetDir)\app.publish\&quot;&#xD;&#xA;copy &quot;$(TargetDir)$(ProjectName).exe&quot; &quot;$(TargetDir)\app.publish\$(ProjectName).exe&quot;&#xD;&#xA;&quot;$(SignToolPath)signtool.exe&quot; sign /fd sha256 /sha1 cf5be20ec9bb462e4b0f4af303a6320fe9c40da6 /td sha256 /tr http://timestamp.digicert.com/ &quot;$(TargetDir)\app.publish\$(ProjectName).exe&quot;" />
	</Target>

  <!--
    Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
    Tools extension to be activated for this project even if the Windows App SDK Nuget
    package has not yet been restored.
  -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>
  <ItemGroup>
    <Page Update="DebugWindow.xaml">
      <SubType>Designer</SubType>
    </Page>
    <Page Update="MainWindow.xaml">
      <SubType>Designer</SubType>
    </Page>
    <Page Update="Media.xaml">
      <SubType>Designer</SubType>
    </Page>
    <Page Update="MediaVW.xaml">
      <SubType>Designer</SubType>
    </Page>
    <Page Update="ScreenConfig.xaml">
      <SubType>Designer</SubType>
    </Page>
    <Page Update="Styles\ComboBoxs.xaml">
      <SubType>Designer</SubType>
    </Page>
    <Page Update="Styles\FlatCheckBox.xaml">
      <SubType>Designer</SubType>
    </Page>
    <Page Update="Styles\NewButtons.xaml">
      <SubType>Designer</SubType>
    </Page>
    <Page Update="Styles\ScrollBars.xaml">
      <SubType>Designer</SubType>
    </Page>
    <Page Update="Styles\Sliders.xaml">
      <SubType>Designer</SubType>
    </Page>
    <Page Update="WPBG.xaml">
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>

  <!--
    Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution
    Explorer "Package and Publish" context menu entry to be enabled for this project even if
    the Windows App SDK Nuget package has not yet been restored.
  -->
  <PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
  </PropertyGroup>

  <!-- Publish Properties -->
  <PropertyGroup>
    <PublishReadyToRun Condition="'$(Configuration)' == 'Debug'">False</PublishReadyToRun>
    <PublishReadyToRun Condition="'$(Configuration)' != 'Debug'">True</PublishReadyToRun>
    <PublishTrimmed Condition="'$(Configuration)' == 'Debug'">False</PublishTrimmed>
    <PublishTrimmed Condition="'$(Configuration)' != 'Debug'">True</PublishTrimmed>
    <UseWindowsForms>True</UseWindowsForms>
    <UseWPF>True</UseWPF>
    <ApplicationIcon>icon.ico</ApplicationIcon>
    <Title>$(AssemblyName)</Title>
    <Company>Aketsuky</Company>
    <Authors>Shiyukine</Authors>
    <PackageId>Shiyukine.$(AssemblyName)</PackageId>
    <PackageProjectUrl>https://aketsuky.net/projects/Wallpapeuhrs.php</PackageProjectUrl>
    <PackageIcon>icon.ico</PackageIcon>
    <RepositoryUrl>https://github.com/Shiyukine/Wallpapeuhrs</RepositoryUrl>
  </PropertyGroup>
  <ItemGroup>
    <AppxManifest Remove="Package.appxmanifest" />
  </ItemGroup>
  <ItemGroup>
    <Content Remove="Resources\AyIconv2 round.png" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Resources\IconWPBG.ico" />
    <EmbeddedResource Include="Resources\web\index.html" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Graphics.Win2D" Version="1.3.2" />
    <PackageReference Include="Microsoft.VCRTForwarders.140" Version="1.1.0" />
    <PackageReference Include="Microsoft.Web.WebView2" Version="1.0.3351.48" />
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.7.250606001" />
    <PackageReference Include="System.Management" Version="9.0.7" />
    <PackageReference Include="WindowsAPICodePack-Shell" Version="1.1.1" />
  </ItemGroup>
  <ItemGroup>
    <Resource Include="Resources\AyIconv2 round.png" />
    <Resource Include="Resources\Icon.ico" />
    <Resource Include="Resources\quicksand-variablefont_wght.ttf" />
  </ItemGroup>
  <ItemGroup>
    <None Update="icon.ico">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>
</Project>